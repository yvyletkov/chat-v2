{"version":3,"sources":["socket.jsx","reducer.js","components/CreateRoomBlock.jsx","components/Chat.jsx","components/JoinRoomBlock.jsx","App.js","index.js"],"names":["socket","io","state","action","type","isJoined","roomId","payload","userName","users","messages","CreateRoomBlock","onCreateRoom","React","useState","setUserName","isLoading","setLoading","handleCreateRoom","a","alert","axios","get","data","window","history","pushState","toString","className","onKeyPress","e","key","preventDefault","placeholder","value","onChange","target","disabled","onClick","Chat","onAddNewMessage","messageText","setMessageText","messagesRef","useRef","useEffect","current","scrollTo","handleSubmit","currentDate","Date","hours","getHours","length","minutes","getMinutes","time","emit","text","map","name","index","ref","message","JoinRoomBlock","props","console","log","match","params","error","setError","handleJoinRoom","roomExist","obj","onJoinRoom","Fragment","App","useReducer","reducer","dispatch","setUsers","setNewMessage","on","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"+MAIeA,E,MAFAC,K,eCFA,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,aACD,OAAO,2BAAIF,GAAX,IACIG,UAAU,EACVC,OAAQH,EAAOI,QAAQD,OACvBE,SAAUL,EAAOI,QAAQC,WAGjC,IAAK,WACD,OAAO,2BAAIN,GAAX,IACIO,MAAON,EAAOI,QAAQE,MACtBC,SAAUP,EAAOI,QAAQG,WAGjC,IAAK,YACD,OAAO,2BAAIR,GAAX,IACIO,MAAON,EAAOM,QAGtB,IAAK,kBACD,OAAO,2BAAIP,GAAX,IACIQ,SAAS,GAAD,mBAAMR,EAAMQ,UAAZ,CAAsBP,EAAOI,YAG7C,QACI,OAAOL,I,iBCmBJS,MA1Cf,YAA0C,IAAhBC,EAAe,EAAfA,aAAe,EAEPC,IAAMC,SAAS,IAFR,mBAEhCN,EAFgC,KAEtBO,EAFsB,OAIPF,IAAMC,UAAS,GAJR,mBAIhCE,EAJgC,KAIrBC,EAJqB,KAMjCC,EAAgB,uCAAG,8BAAAC,EAAA,yDACdX,EADc,gBAEfY,MAAM,iEAFS,8BAIfH,GAAW,GAJI,SAKEI,IAAMC,IAAI,gBALZ,OAKXC,EALW,OAMVjB,EAAUiB,EAAKA,KAAfjB,OAELM,EADU,CAACN,SAAQE,aAEnBS,GAAW,GACXO,OAAOC,QAAQC,UAAU,KAAM,GAAIpB,EAAOqB,YAV3B,4CAAH,qDAqBpB,OACI,yBAAKC,UAAU,cACX,4EAEA,2BAAOC,WAXgB,SAACC,GACf,UAAVA,EAAEC,MACDD,EAAEE,iBACFd,MAQ2Cd,KAAK,OAAO6B,YAAY,8CAC5DC,MAAO1B,EAAU2B,SAAU,SAACL,GAC/Bf,EAAYe,EAAEM,OAAOF,UAEzB,4BAAQG,SAAUrB,EAAWsB,QAASpB,EAAkBU,UAAU,mBAC7DZ,EAAY,8BAAY,oCCyC1BuB,EA7EF,SAAC,GAA0D,IAAzD9B,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUF,EAAuC,EAAvCA,SAAUF,EAA6B,EAA7BA,OAAQkC,EAAqB,EAArBA,gBAAqB,EAE/B3B,IAAMC,SAAS,IAFgB,mBAE9D2B,EAF8D,KAEjDC,EAFiD,KAI7DC,EAAc9B,IAAM+B,SAE1B/B,IAAMgC,WAAW,WACbF,EAAYG,QAAQC,SAAS,EAAG,SACjC,CAACrC,IAEJ,IAIIsC,EAAe,WAEf,IAAMC,EAAc,IAAIC,KAClBC,EAAqD,IAA7CF,EAAYG,WAAWzB,WAAW0B,OAC1C,IAAMJ,EAAYG,WAClBH,EAAYG,WACZE,EAAyD,IAA/CL,EAAYM,aAAa5B,WAAW0B,OAC9C,IAAMJ,EAAYM,aAClBN,EAAYM,aAEZC,EAAI,UAAML,EAAN,YAAeG,GAEzBtD,EAAOyD,KAAK,cAAe,CACvBnD,SACAE,WACAkD,KAAMjB,IAEVD,EAAiB,CAAChC,WAAUkD,KAAMjB,EAAae,SAC/Cd,EAAe,KAUnB,OACI,yBAAKd,UAAU,QACX,yBAAKA,UAAU,cACX,uCAAatB,GACb,0CAAgBE,GAChB,6BACA,sCAAYC,EAAQA,EAAM4C,OAAO,IAAjC,MACA,4BACK5C,EAAQA,EAAMkD,KAAK,SAACC,EAAMC,GAAP,OAAiB,wBAAI9B,IAAK6B,EAAOC,GAAQD,MAC7D,OAGR,yBAAKhC,UAAU,iBAEX,yBAAKkC,IAAKnB,EAAaf,UAAU,YAC3BlB,EAAWA,EAASiD,KAAK,SAACI,EAASF,GACjC,OAAO,yBAAK9B,IAAK8B,EAAOjC,UAAU,WAC9B,yBAAKA,UAAU,2BAA2BmC,EAAUA,EAAQL,KAAO,MACnE,6BACI,8BAAOK,EAAUA,EAAQP,KAAO,KAAM,MACtC,8BAAOO,EAAU,IAAMA,EAAQvD,SAAW,WAGjD,MAGT,8BACI,8BAAUqB,WAlCK,SAACC,GACf,UAAVA,EAAEC,MACDD,EAAEE,iBACFgB,MA+BsDd,MAAOO,EAAaN,SA3DvD,SAACL,GACxBY,EAAeZ,EAAEM,OAAOF,WA4DZ,4BAAQI,QAASU,EAAcpB,UAAU,mBAAzC,WClBLoC,MArDf,SAAuBC,GACnBC,QAAQC,IAAI,SAAUF,GAEtB,IAAI3D,GAAU2D,EAAMG,MAAMC,OAAO/D,OAHP,EAKIO,IAAMC,SAAS,IALnB,mBAKrBN,EALqB,KAKXO,EALW,OAMIF,IAAMC,UAAS,GANnB,mBAMrBE,EANqB,KAMVC,EANU,OAOFJ,IAAMC,UAAS,GAPb,mBAOrBwD,EAPqB,KAOdC,EAPc,KAStBC,EAAc,uCAAG,8BAAArD,EAAA,yDAEZX,EAFY,gBAGbY,MAAM,iEAHO,8BAKbH,GAAW,GALE,SAMMI,IAAMC,IAAN,sBAAyBhB,IAN/B,kBAMRiB,KAEIkD,WACDC,EAAM,CAACpE,SAAQE,YACnByD,EAAMU,WAAWD,GACjBzD,GAAW,IAGXsD,GAAS,GAdA,4CAAH,qDA0BlB,OAAQ,kBAAC,IAAMK,SAAP,KAEA,yBAAKhD,UAAU,cACX,6DAAmCtB,GAEnC,2BAAOuB,WAZY,SAACC,GACf,UAAVA,EAAEC,MACDD,EAAEE,iBACFwC,MAS+CpE,KAAK,OAAO6B,YAAY,8CAC5DC,MAAO1B,EAAU2B,SAAU,SAACL,GAC/Bf,EAAYe,EAAEM,OAAOF,UAEzB,4BAAQI,QAASkC,EAAgB5C,UAAU,mBACtCZ,EAAY,8BAAY,kCAE5BsD,GAAS,wDCgBXO,MAvDf,WAAgB,IAAD,EAEehE,IAAMiE,WAAWC,EAAS,CAChD1E,UAAU,EACVC,OAAQ,KACRE,SAAU,KACVC,MAAO,GACPC,SAAU,KAPH,mBAEJR,EAFI,KAEG8E,EAFH,KAULpE,EAAY,uCAAG,WAAM8D,GAAN,eAAAvD,EAAA,6DACjB6D,EAAS,CAAC5E,KAAM,aAAcG,QAASmE,IACvC1E,EAAOyD,KAAK,YAAaiB,GAFR,SAGErD,IAAMC,IAAN,iBAAoBoD,EAAIpE,SAH1B,OAGXiB,EAHW,OAKjByD,EAAS,CAAC5E,KAAM,WAAYG,QAASgB,EAAKA,OALzB,2CAAH,sDAQZoD,EAAU,uCAAG,WAAOD,GAAP,eAAAvD,EAAA,6DACf6D,EAAS,CAAC5E,KAAM,aAAcG,QAASmE,IACvC1E,EAAOyD,KAAK,YAAaiB,GAFV,SAGErD,IAAMC,IAAN,iBAAoBoD,EAAIpE,SAH1B,OAGXiB,EAHW,OAKfyD,EAAS,CAAC5E,KAAM,WAAYG,QAASgB,EAAKA,OAL3B,2CAAH,sDAQV0D,EAAW,SAACxE,GACduE,EAAS,CAAC5E,KAAM,YAAaK,WAG3ByE,EAAgB,SAACnB,GACnBiB,EAAS,CAAC5E,KAAM,kBAAmBG,QAASwD,KAYhD,OATAlD,IAAMgC,WAAU,WACZ7C,EAAOmF,GAAG,YAAaF,GACvBjF,EAAOmF,GAAG,cAAeD,KAC1B,IAEH1D,OAAOxB,OAASA,EAEhBkE,QAAQC,IAAI,WAAYjE,GAEpBA,EAAMG,SAAiB,yBAAKuB,UAAU,WAAU,kBAAC,EAAD,iBAAU1B,EAAV,CAAiBsC,gBAAiB0C,MAG9E,yBAAKtD,UAAU,WACX,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,WACXC,OAAQ,SAACrB,GAAD,OAAW,kBAAC,EAAD,iBAAmBA,EAAnB,CAA0BU,WAAYA,QAChE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAM,kBAAC,EAAD,CAAiB1E,aAAcA,S,QCvDpE2E,IAASD,OACL,kBAAC,IAAME,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGRC,SAASC,eAAe,U","file":"static/js/main.c0c29709.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nconst socket = io();\n\nexport default socket;\n","export default (state, action) => {\n    switch (action.type) {\n        case 'SET-JOINED': {\n            return {...state,\n                isJoined: true,\n                roomId: action.payload.roomId,\n                userName: action.payload.userName\n            }\n        }\n        case 'SET-DATA': {\n            return {...state,\n                users: action.payload.users,\n                messages: action.payload.messages,\n            }\n        }\n        case 'SET-USERS': {\n            return {...state,\n                users: action.users\n            }\n        }\n        case 'SET-NEW-MESSAGE': {\n            return {...state,\n                messages: [...state.messages, action.payload]\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","import React from 'react';\nimport axios from 'axios'\n\nfunction CreateRoomBlock({onCreateRoom}) {\n\n    let [userName, setUserName] = React.useState('');\n\n    let [isLoading, setLoading] = React.useState(false);\n\n    let handleCreateRoom = async () => {\n        if (!userName) {\n            alert('ВВЕДИТЕ ИМЯ')\n        } else {\n            setLoading(true);\n            let data = await axios.get('/create-room');\n            let {roomId} = data.data;\n            let obj = {roomId, userName};\n            onCreateRoom(obj);\n            setLoading(false);\n            window.history.pushState(null, \"\", roomId.toString())\n        }\n    };\n\n    const handleEnterButtonPress = (e) => {\n        if(e.key === 'Enter'){\n            e.preventDefault();\n            handleCreateRoom();\n        }\n    };\n\n    return (\n        <div className=\"join-block\">\n            <span>Please, enter your name to create new room</span>\n\n            <input onKeyPress={handleEnterButtonPress} type=\"text\" placeholder=\"Ваше имя\"\n                   value={userName} onChange={(e) => {\n                setUserName(e.target.value)\n            }}/>\n            <button disabled={isLoading} onClick={handleCreateRoom} className=\"btn btn-success\">\n                {isLoading ? '...ВХОД' : 'ВОЙТИ'}\n            </button>\n        </div>\n    );\n}\n\nexport default CreateRoomBlock;","import React from \"react\";\nimport socket from \"../socket\";\n\nconst Chat = ({users, messages, userName, roomId, onAddNewMessage}) => {\n\n    let [messageText, setMessageText] = React.useState('');\n\n    const messagesRef = React.useRef();\n\n    React.useEffect( () => {\n        messagesRef.current.scrollTo(0, 99999);\n    }, [messages]);\n\n    let onMessageInputChange = (e) => {\n        setMessageText(e.target.value)\n    };\n\n    let handleSubmit = () => {\n\n        const currentDate = new Date();\n        const hours = currentDate.getHours().toString().length === 1\n            ? '0' + currentDate.getHours()\n            : currentDate.getHours();\n        const minutes = currentDate.getMinutes().toString().length === 1\n            ? '0' + currentDate.getMinutes()\n            : currentDate.getMinutes();\n\n        const time = `${hours}:${minutes}`;\n\n        socket.emit('NEW-MESSAGE', {\n            roomId,\n            userName,\n            text: messageText\n        });\n        onAddNewMessage( {userName, text: messageText, time} );\n        setMessageText('');\n    };\n\n    const handleEnterButtonPress = (e) => {\n        if(e.key === 'Enter'){\n            e.preventDefault();\n            handleSubmit();\n        }\n    };\n\n    return (\n        <div className='chat'>\n            <div className='chat-users'>\n                <h5>RoomID: {roomId}</h5>\n                <h5>Your name: {userName}</h5>\n                <hr/>\n                <h6>Users ({users ? users.length:'0'}):</h6>\n                <ul>\n                    {users ? users.map( (name, index) => <li key={name + index}>{name}</li>) :\n                    null }\n                </ul>\n            </div>\n            <div className='chat-messages'>\n\n                <div ref={messagesRef} className='messages'>\n                    { messages ? messages.map( (message, index) => {\n                        return <div key={index} className='message'>\n                            <div className='message-body bg-primary'>{message ? message.text : null}</div>\n                            <div>\n                                <span>{message ? message.time + ' /': null}</span>\n                                <span>{message ? ' ' + message.userName : null}</span>\n                            </div>\n                        </div>\n                    }) : null}\n                </div>\n\n                <form>\n                    <textarea onKeyPress={handleEnterButtonPress} value={messageText} onChange={onMessageInputChange}/>\n                </form>\n                    <button onClick={handleSubmit} className='btn btn-primary'>Send</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Chat;","import React from 'react';\nimport axios from 'axios'\n\nfunction JoinRoomBlock(props) {\n    console.log('PROPS:', props);\n\n    let roomId = +props.match.params.roomId;\n\n    let [userName, setUserName] = React.useState('');\n    let [isLoading, setLoading] = React.useState(false);\n    let [error, setError] = React.useState(false);\n\n    let handleJoinRoom = async () => {\n\n        if (!userName) {\n            alert('ВВЕДИТЕ ИМЯ')\n        } else {\n            setLoading(true);\n            let {data} = await axios.get(`/check-room/${roomId}`);\n            debugger\n            if (data.roomExist) {\n                let obj = {roomId, userName};\n                props.onJoinRoom(obj);\n                setLoading(false);\n            }\n            else {\n                setError(true)\n            }\n        }\n    };\n\n    const handleEnterButtonPress = (e) => {\n        if(e.key === 'Enter'){\n            e.preventDefault();\n            handleJoinRoom();\n        }\n    };\n\n    return (<React.Fragment>\n\n            <div className=\"join-block\">\n                <span>You are invited to the room {roomId}</span>\n\n                <input onKeyPress={handleEnterButtonPress} type=\"text\" placeholder=\"Ваше имя\"\n                       value={userName} onChange={(e) => {\n                    setUserName(e.target.value)\n                }}/>\n                <button onClick={handleJoinRoom} className=\"btn btn-success\">\n                    {isLoading ? '...ВХОД' : 'ВОЙТИ'}\n                </button>\n                {error && <span>Room does not exist</span>}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default JoinRoomBlock;","import React from 'react';\nimport {Route} from 'react-router-dom';\n\nimport './App.css';\nimport socket from \"./socket\";\nimport reducer from './reducer'\nimport CreateRoomBlock from \"./components/CreateRoomBlock\";\nimport Chat from \"./components/Chat\";\nimport axios from \"axios\";\nimport JoinRoomBlock from \"./components/JoinRoomBlock\";\n\nfunction App() {\n\n    const [state, dispatch] = React.useReducer(reducer, {\n        isJoined: false,\n        roomId: null,\n        userName: null,\n        users: [],\n        messages: []\n    });\n\n    const onCreateRoom = async obj => {\n        dispatch({type: 'SET-JOINED', payload: obj});\n        socket.emit('ROOM:JOIN', obj);\n        const data = await axios.get(`/rooms/${obj.roomId}`);\n        debugger\n        dispatch({type: 'SET-DATA', payload: data.data});\n    };\n\n    const onJoinRoom = async (obj) => {\n        dispatch({type: 'SET-JOINED', payload: obj});\n        socket.emit('ROOM:JOIN', obj);\n        let data = await axios.get(`/rooms/${obj.roomId}`);\n        debugger\n        dispatch({type: 'SET-DATA', payload: data.data});\n    }\n\n    const setUsers = (users) => {\n        dispatch({type: 'SET-USERS', users})\n    };\n\n    const setNewMessage = (message) => {\n        dispatch({type: 'SET-NEW-MESSAGE', payload: message})\n    };\n\n    React.useEffect(() => {\n        socket.on('SET-USERS', setUsers); // выполняется setUsers с юзерами с сервера\n        socket.on('NEW-MESSAGE', setNewMessage);\n    }, []);\n\n    window.socket = socket;\n\n    console.log('state = ', state);\n\n    if (state.isJoined) return <div className=\"wrapper\"><Chat {...state} onAddNewMessage={setNewMessage}/></div>\n\n    else return (\n            <div className=\"wrapper\">\n                <Route exact path='/:roomId'\n                       render={(props) => <JoinRoomBlock {...props} onJoinRoom={onJoinRoom}/> }/>\n                <Route exact path='/'\n                       render={() => <CreateRoomBlock onCreateRoom={onCreateRoom}/> }/>\n            </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}